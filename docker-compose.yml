version: '3'

services:
  python:
    restart: always
    build: .
    command: >
      bash -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py makemigrations authentication &&
        python manage.py migrate authentication &&
        python manage.py makemigrations abcp_parser &&
        python manage.py migrate abcp_parser &&
        echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='${{ secrets.SUPERUSER_NAME }}').exists() or User.objects.create_superuser('${{ secrets.SUPERUSER_NAME }}', '${{ secrets.SUPERUSER_EMAIL }}', '${{ secrets.SUPERUSER_PASSWORD }}')\" | python manage.py shell &&
        gunicorn --bind 0.0.0.0:8000 outletavto.wsgi:application
      "
    volumes:
      - static_volume:/srv/www/outletavto/static/
    expose:
      - 8000
    ports:
      - 8000:8000
    environment:
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
    depends_on:
      - db
# Добавляем запуск cron
#    command: bash -c "echo '0 3 * * * /usr/local/bin/python /code/manage.py my_custom_command' | crontab - && crond -f"

  db:
    restart: always
    image: postgres:latest
    environment:
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
    volumes:
      - db_data:/var/lib/postgresql/data/

  nginx:
    restart: always
    image: nginx:latest
    expose:
      - 8080
      - 443
    ports:
      - "80:8080"
      - "443:443"
    depends_on:
      - python
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/srv/www/outletavto/static/

volumes:
  ssl_volume:
  static_volume:
  db_data:
